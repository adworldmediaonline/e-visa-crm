export type Applicants = {
  id: string;
  lastExitStepUrl: string;
  applicationType: string;
  nationalityRegion: string;
  passportType: string;
  portOfArrival: string;
  dateOfBirth: string;
  emailId: string;
  reEmailId: string;
  contactNo: string;
  visaService: string;
  eEmergencyXMisc?: string;
  eTouristVisa?: string;
  eTouristVisa30Days?: string;
  eTouristVisa1Year?: string;
  eTouristVisa5Years?: string;
  eMedicalVisa?: string;
  eBusinessVisa?: string;
  eConferenceVisa?: string;
  eMedicalAttendantVisa?: string;
  expectedDateOfArrival: string;
  paymentStatus: 'pending' | 'success' | 'failed';
  termsAndConditions: boolean;
  termsAndConditionsContent?: string;
  createdAt: string;
};

export type Step2Form = {
  _id: string;
  formId: string;
  firstName: string;
  lastName: string;
  changedName: boolean;
  previousName: string;
  previousLastName: string;
  gender: string;
  dateOfBirth: string;
  townCityOfBirth: string;
  countryRegionOfBirth: string;
  citizenshipNationalID: string;
  religion: string;
  religionOther: string;
  visibleIdentificationMarks: string;
  educationalQualification: string;
  nationalityRegion: string;
  acquireNationality: string;
  previousNationality: string;
  haveLivedInApplyingCountry: string;
  passportNumber: string;
  placeOfIssue: string;
  dateOfIssue: string;
  dateOfExpiry: string;
  countryOfIssue: string;
  anyOtherPassport: string;
  passportICNumber: string;
  dateOfIssuePassportIC: string;
  placeOfIssuePassportIC: string;
  passportNationalityMentionedTherein: string;
  createdAt: string;
  updatedAt: string;
  __v: number;
};

export type Step3Form = {
  _id: string;
  formId: string;
  houseNoStreet: string;
  villageTownCity: string;
  country: string;
  stateProvinceDistrict: string;
  postalZipCode: string;
  phoneNo: string;
  mobileNo: string;
  emailAddress: string;
  sameAddress: boolean;
  permanentAddressHouseNoStreet: string;
  permanentAddressVillageTownCity: string;
  permanentAddressStateProvinceDistrict: string;
  fatherFullName: string;
  fatherNationality: string;
  fatherPreviousNationality: string;
  fatherPlaceOfBirth: string;
  fatherCountry: string;
  motherFullName: string;
  motherNationality: string;
  motherPreviousNationality: string;
  motherPlaceOfBirth: string;
  motherCountryOfBirth: string;
  applicantMaritalStatus: string;
  spouseFullName: string;
  spouseNationality: string;
  spousePreviousNationality: string;
  spousePlaceOfBirth: string;
  spouseCountryOfBirth: string;
  parentsPakistanNational: string;
  parentDetails: string;
  presentOccupation: string;
  presentOtherOccupation: string;
  houseWifeOccupationDetails: string;
  employerName: string;
  designation: string;
  address: string;
  applicantPhone: string;
  pastOccupationIfAny: string;
  militaryOrganization: string;
  organization: string;
  militaryDesignation: string;
  militaryRank: string;
  placeOfPosting: string;
  createdAt: string;
  updatedAt: string;
  __v: number;
};

export type Step4Form = {
  _id: string;
  formId: string;
  visaType: string;
  visaService: string;
  contactNo: string;
  placesToVisit: string;
  placesToVisit2: string;
  bookedHotel: string;
  bookedHotelTourOperatorName: string;
  bookedHotelTourOperatorAddress: string;
  bookedHotelName: string;
  bookedHotelPlace: string;
  durationOfVisa: string;
  numberOfEntries: string;
  portOfArrival: string;
  expectedPortOfExit: string;
  visitedIndiaBefore: string;
  visitedIndiaBeforeVisaAddress: string;
  visitedIndiaBeforeCitiesVisitedInIndia: string;
  visitedIndiaBeforeLastIndianVisaNo: string;
  visitedIndiaBeforeTypeOfVisa: string;
  visitedIndiaBeforePlaceOfIssue: string;
  visitedIndiaBeforeDateOfIssue: string;
  permissionRefused: string;
  refusalDetails: string;
  visaServiceSelectedValueValidation: string;
  eMedicalNameOfHospital: string;
  eMedicalAddressOfHospital: string;
  eMedicalPhoneOfHospital: string;
  eMedicalStateOfHospital: string;
  eMedicalDistrictOfHospital: string;
  eMedicalTypeOfMedicalTreatment: string;
  eBusinessCompanyName: string;
  eBusinessCompanyAddress: string;
  eBusinessCompanyPhone: string;
  eBusinessCompanyWebsite: string;
  eBusinessCompanyNatures: string;
  eBusinessAttendTechMeetingName: string;
  eBusinessAttendTechMeetingAddress: string;
  eBusinessAttendTechMeetingPhone: string;
  eBusinessRecruitManpowerNamecontactCompanyRepresentative: string;
  eBusinessRecruitManpowerNatureOfJob: string;
  eBusinessRecruitManpowerPlacesRecruitmentConducted: string;
  eBusinessParticipationInExhibitionsNameAndAddress: string;
  eBusinessConductingToursNameAndAddress: string;
  eBusinessConductingToursCities: string;
  eBusinessConductingToursTravelAgencyName: string;
  eBusinessConductingToursTravelAgencyPhone: string;
  eBusinessConductingToursTravelAgencyAddress: string;
  eMedicalAttendantNameVisaHolder: string;
  eMedicalAttendantAppOrVisa: string;
  eMedicalAttendantVisaNumberOfVisaHolder: string;
  eMedicalAttendantApplicationIdOfVisaHolder: string;
  eMedicalAttendantPassportNumberOfVisaHolder: string;
  eMedicalAttendantDobOfVisaHolder: string;
  eMedicalAttendantNationalityOfVisaHolder: string;
  eConferenceNameOfConference: string;
  eConferenceStartDate: string;
  eConferenceEndDate: string;
  eConferenceAddress: string;
  eConferenceState: string;
  eConferenceDistrict: string;
  eConferencePincode: string;
  eConferenceNameOfOrganizer: string;
  eConferenceAddressOfOrganizer: string;
  eConferencePhoneOfOrganizer: string;
  eConferenceEmailOfOrganizer: string;
  countryVisitedInLast10Years: string[];
  visitedSAARCCountries: string;
  visitedSAARCCountriesLists: {
    saarcCountryName: string;
    selectYear: string;
    numberOfVisits: string;
    _id: string;
  }[];
  referenceNameInIndia: string;
  referenceAddress: string;
  referenceState: string;
  referenceDistrict: string;
  referencePhone: string;
  referenceNameInHome: string;
  referenceNameInHomeCountry: string;
  referenceAddressInHomeCountry: string;
  referencePhoneInHomeCountry: string;
  createdAt: string;
  updatedAt: string;
  __v: number;
};

export type Step5Form = {
  _id: string;
  formId: string;
  haveYouBeenArrested: string;
  haveYouBeenRefusedEntry: string;
  haveYouBeenEngagedInTrafficking: string;
  haveYouBeenEngagedInCrime: string;
  haveYouExpressedViews: string;
  haveYouSoughtAsylum: string;
  declaration: boolean;
  haveYouBeenArrestedInput: string;
  haveYouBeenRefusedEntryInput: string;
  haveYouBeenEngagedInTraffickingInput: string;
  haveYouBeenEngagedInCrimeInput: string;
  haveYouExpressedViewsInput: string;
  haveYouSoughtAsylumInput: string;
  createdAt: string;
  updatedAt: string;
  __v: number;
};

export type Step6Form = {
  _id: string;
  formId: string;
  profilePicture: string;
  passport: string[];
  businessCard: string[];
  eMedicalCard: string[];
  createdAt: string;
  updatedAt: string;
  __v: number;
};

export interface ApplicantsFormData {
  _id: string;
  lastExitStepUrl: string;
  applicationType: string;
  nationalityRegion: string;
  passportType: string;
  portOfArrival: string;
  dateOfBirth: string;
  emailId: string;
  reEmailId: string;
  contactNo: string;
  visaService: string;
  eEmergencyXMisc: string;
  eTouristVisa: string;
  eTouristVisa30Days: string;
  eTouristVisa1Year: string;
  eTouristVisa5Years: string;
  eMedicalVisa: string;
  eBusinessVisa: string;
  eConferenceVisa: string;
  eMedicalAttendantVisa: string;
  expectedDateOfArrival: string;
  paymentStatus: string;
  termsAndConditions: boolean;
  createdAt: string;
  updatedAt: string;
  __v: number;
  step2: Step2Form;
  step3: Step3Form;
  step4: Step4Form;
  step5: Step5Form;
  step6: Step6Form;
}

// turkey
export type TurkeyVisaEntries = {
  _id: string;
  countryCitizenship: string;
  arrivalDate: string;
  passportDetails: {
    fullName: string;
    nationality: string;
    passportNumber: string;
    dateOfBirth: string;
    _id: string;
  }[];
  contactDetailsFullName: string;
  contactDetailsAddress: string;
  contactDetailsEmail: string;
  contactDetailsContactNumber: string;
  numberOfEntries: string;
  visaDuration: string;
  yourStayCannotExceed: string;
  createdAt: string;
  updatedAt: string;
  __v: number;
};

// australia
export type AustraliaVisaEntriesPersonalDetails = {
  givenName: string;
  surnameFamilyName: string;
  emailAddress: string;
  confirmEmailAddress: string;
  dateOfBirth: string;
  countryTerritoryOfBirth: string;
  cityOfBirth: string;
  maritalStatus: string;
  gender: string;
};
export type AustraliaVisaEntries = {
  travelDetails: {
    purposeOfStay: string;
    plannedDate: string;
    passengerNationality: string;
    portOfArrival: string;
  };
  personalDetails: AustraliaVisaEntriesPersonalDetails;
  passportDetails: {
    passportNumber: string;
    issuingAuthority: string;
    dateOfIssue: string;
    dateOfExpiry: string;
    citizen: boolean;
    additionalCitizenship: string;
    obtainedVisa: string;
  };
  contactDetails: {
    address: string;
    houseNumber: string;
    apartmentNumber: string;
    zipPostalCode: string;
    cityTown: string;
    provinceState: string;
    countryTerritory: string;
    phoneNumber: string;
  };
  backgroundQuestions: {
    criminalOffence: string;
    criminalOffenceDetails: string;
    offenceCharge: string;
    offenceChargeDetails: string;
  };
  vatInvoice: {
    needVatInvoice: boolean;
    taxIdentificationNumber: string;
    companyName: string;
    companyCountry: string;
    companyCity: string;
    companyPostal: string;
    companyStreet: string;
  };
  travelInsurance: {
    isTravelInsurance: string;
    startDate: string;
    returnDate: string;
    insuranceFee: string;
    travelInsuranceTermsAndConditions: boolean;
  };
  _id: string;
  termsAndConditions: boolean;
  createdAt: string;
  updatedAt: string;
  __v: number;
};

//srilanka
// tourist individual
export type SrilankaTouristIndividualType = {
  familyNameIndividualTourist: string;
  givenNameIndividualTourist: string;
  titleIndividualTourist: string;
  dateOfBirthIndividualTourist: string;
  genderIndividualTourist: string;
  nationalityIndividualTourist: string;
  countryOfBirthIndividualTourist: string;
  covidVaccinatedIndividualTourist: string;
  occupationIndividualTourist: string;
  passportNumberIndividualTourist: string;
  issueDateIndividualTourist: string;
  expiryDateIndividualTourist: string;
  passportImageIndividualTourist: string;
  whereHaveBeenIndividualTourist: string;
  attendantArrivalDateIndividualTourist: string;
  purposeOfVisitIndividualTourist: string;
  visaValidPeriodIndividualTourist: string;
  portOfDepartureIndividualTourist: string;
  arilineVesselIndividualTourist: string;
  flightVesselNumberIndividualTourist: string;
  addressLineOneIndividualTourist: string;
  addressLineTwoIndividualTourist: string;
  cityIndividualTourist: string;
  stateIndividualTourist: string;
  zipCodeIndividualTourist: string;
  countryIndividualTourist: string;
  addressInSrilankaIndividualTourist: string;
  emailIndividualTourist: string;
  alternateEmailIndividualTourist: string;
  telephoneIndividualTourist: string;
  mobileIndividualTourist: string;
  faxNumberIndividualTourist: string;
  validResidenceIndividualTourist: string;
  validEtaOrExtensionIndividualTourist: string;
  multipleEntryVisaIndividualTourist: string;
  childInformation: {
    type: boolean;
    default: false;
  };
};

export type GroupTouristMember = {
  _id: string;
  formId: string;
  familyNameGroupTourist: string;
  givenNameGroupTourist: string;
  titleGroupTourist: string;
  dateOfBirthGroupTourist: string;
  genderGroupTourist: string;
  nationalityGroupTourist: string;
  countryOfBirthGroupTourist: string;
  covidVaccinatedGroupTourist: string;
  countryOfAddressGroupTourist: string;
  occupationGroupTourist: string;
  passportNumberGroupTourist: string;
  issueDateGroupTourist: string;
  expiryDateGroupTourist: string;
  passportImageGroupTourist: string;
  validResidenceGroupTourist: string;
  validEtaOrExtensionGroupTourist: string;
  multipleEntryVisaGroupTourist: string;
  createdAt: string;
  updatedAt: string;
  __v: number;
};

export interface GroupTourist {
  _id: string;
  whereHaveBeenGroupTourist: string;
  attendantArrivalDateGroupTourist: string;
  purposeOfVisitGroupTourist: string;
  visaValidPeriodGroupTourist: string;
  portOfDepartureGroupTourist: string;
  ArilineVesselGroupTourist: string;
  flightVesselNumberGroupTourist: string;
  addressLineOneGroupTourist: string;
  addressLineTwoGroupTourist: string;
  cityGroupTourist: string;
  stateGroupTourist: string;
  zipCodeGroupTourist: string;
  countryGroupTourist: string;
  addressInSrilankaGroupTourist: string;
  emailGroupTourist: string;
  alternateEmailGroupTourist: string;
  telephoneGroupTourist: string;
  mobileGroupTourist: string;
  faxNumberGroupTourist: string;
  members: GroupTouristMember[];
  createdAt: string;
  updatedAt: string;
  __v: number;
}

export type ThirdPartyTouristMember = {
  _id: string;
  formId: string;
  familyNameThirdPartyTourist: string;
  givenNameThirdPartyTouristMember: string;
  titleThirdPartyTourist: string;
  dateOfBirthThirdPartyTourist: string;
  genderThirdPartyTourist: string;
  nationalityThirdPartyTourist: string;
  countryOfBirthThirdPartyTourist: string;
  covidVaccinatedThirdPartyTourist: string;
  countryOfAddressThirdPartyTourist: string;
  occupationThirdPartyTourist: string;
  passportNumberThirdPartyTourist: string;
  issueDateThirdPartyTourist: string;
  expiryDateThirdPartyTourist: string;
  passportImageThirdPartyTourist: string;
  validResidenceThirdPartyTourist: string;
  validEtaOrExtensionThirdPartyTourist: string;
  multipleEntryVisaThirdPartyTourist: string;
  __v: number;
};
export interface ThirdPartyTourist {
  _id: string;
  whereHaveBeenThirdPartyTourist: string;
  attendantArrivalDateThirdPartyTourist: string;
  purposeOfVisitThirdPartyTourist: string;
  visaValidPeriodThirdPartyTourist: string;
  portOfDepartureThirdPartyTourist: string;
  arilineVesselThirdPartyTourist: string;
  flightVesselNumberThirdPartyTourist: string;
  partyThirdPartyTourist: string;
  familyNameTypeOfThirdPartyTourist: string;
  givenNameTypeOfThirdPartyTourist: string;
  addressLineOneThirdPartyTourist: string;
  addressLineTwoThirdPartyTourist: string;
  cityThirdPartyTourist: string;
  stateThirdPartyTourist: string;
  zipCodeThirdPartyTourist: string;
  countryThirdPartyTourist: string;
  addressInSrilankaThirdPartyTourist: string;
  telephoneThirdPartyTourist: string;
  mobileThirdPartyTourist: string;
  faxNumberThirdPartyTourist: string;
  emailThirdPartyTourist: string;
  alternateEmailThirdPartyTourist: string;
  members: ThirdPartyTouristMember[];
  createdAt: string;
  updatedAt: string;
  __v: number;
}
// business individual
export interface BusinessIndividual {
  _id: string;
  familyNameBusinessIndividualTourist: string;
  givenNameBusinessIndividualTourist: string;
  titleBusinessIndividualTourist: string;
  dateOfBirthBusinessIndividualTourist: string;
  genderBusinessIndividualTourist: string;
  nationalityBusinessIndividualTourist: string;
  countryOfBirthBusinessIndividualTourist: string;
  covidVaccinatedBusinessIndividualTourist: string;
  occupationBusinessIndividualTourist: string;
  passportNumberBusinessIndividualTourist: string;
  issueDateBusinessIndividualTourist: string;
  expiryDateBusinessIndividualTourist: string;
  passportImageBusinessIndividualTourist: string;
  whereHaveBeenBusinessIndividualTourist: string;
  attendantArrivalDateBusinessIndividualTourist: string;
  purposeOfVisitBusinessIndividualTourist: string;
  purposeDescriptionBusinessIndividualTourist: string;
  portOfDepartureBusinessIndividualTourist: string;
  arilineVesselBusinessIndividualTourist: string;
  flightVesselNumberBusinessIndividualTourist: string;
  companyNameBusinessIndividualTourist: string;
  addressLineOneBusinessIndividualTourist: string;
  addressLineTwoBusinessIndividualTourist: string;
  cityBusinessIndividualTourist: string;
  stateBusinessIndividualTourist: string;
  zipCodeBusinessIndividualTourist: string;
  countryBusinessIndividualTourist: string;
  emailBusinessIndividualTourist: string;
  alternateEmailBusinessIndividualTourist: string;
  telephoneBusinessIndividualTourist: string;
  mobileBusinessIndividualTourist: string;
  faxNumberBusinessIndividualTourist: string;
  companyNameBusinessIndividualTouristOfSrilankaCompany: string;
  addressLineOneBusinessIndividualTouristOfSrilankaCompany: string;
  addressLineTwoBusinessIndividualTouristOfSrilankaCompany: string;
  cityBusinessIndividualTouristOfSrilankaCompany: string;
  stateBusinessIndividualTouristOfSrilankaCompany: string;
  zipCodeBusinessIndividualTouristOfSrilankaCompany: string;
  emailBusinessIndividualTouristOfSrilankaCompany: string;
  telephoneBusinessIndividualTouristOfSrilankaCompany: string;
  mobileBusinessIndividualTouristOfSrilankaCompany: string;
  faxNumberBusinessIndividualTouristOfSrilankaCompany: string;
  validResidenceBusinessTourist: string;
  validEtaOrExtensionBusinessTourist: string;
  multipleEntryVisaBusinessTourist: string;
  createdAt: string;
  updatedAt: string;
  __v: number;
}

// business group
export type BusinessGroupMember = {
  _id: string;
  formId: string;
  familyNameBusinessGroupMember: string;
  givenNameBusinessGroupMember: string;
  titleBusinessGroupMember: string;
  dateOfBirthBusinessGroupMember: string;
  genderBusinessGroupMember: string;
  nationalityBusinessGroupMember: string;
  countryOfBirthBusinessGroupMember: string;
  covidVaccinatedBusinessGroupMember: string;
  countryOfAddressBusinessGroupMember: string;
  occupationBusinessGroupMember: string;
  passportNumberBusinessGroupMember: string;
  issueDateBusinessGroupMember: string;
  expiryDateBusinessGroupMember: string;
  passportImageBusinessGroupMember: string;
  validResidenceBusinessGroupMember: string;
  validEtaOrExtensionBusinessGroupMember: string;
  multipleEntryVisaBusinessGroupMember: string;
  createdAt: string;
  updatedAt: string;
  __v: number;
};

export interface BusinessGroup {
  _id: string;
  whereHaveBeenBusinessGroup: string;
  attendantArrivalDateBusinessGroup: string;
  purposeOfVisitBusinessGroup: string;
  purposeOfDescriptionBusinessGroup: string;
  portOfDepartureBusinessGroup: string;
  arilineVesselBusinessGroup: string;
  flightVesselNumberBusinessGroup: string;
  companyNameBusinessGroup: string;
  addressLineOneBusinessGroup: string;
  addressLineTwoBusinessGroup: string;
  cityBusinessGroup: string;
  stateBusinessGroup: string;
  zipCodeBusinessGroup: string;
  countryBusinessGroup: string;
  telephoneBusinessGroup: string;
  mobileBusinessGroup: string;
  faxNumberBusinessGroup: string;
  emailBusinessGroup: string;
  alternateEmailBusinessGroup: string;
  companyNameBusinessGroupOfSrilankaCompany: string;
  addressLineOneBusinessGroupOfSrilankaCompany: string;
  addressLineTwoBusinessGroupOfSrilankaCompany: string;
  cityBusinessGroupOfSrilankaCompany: string;
  stateBusinessGroupOfSrilankaCompany: string;
  zipCodeBusinessGroupOfSrilankaCompany: string;
  telephoneBusinessGroupOfSrilankaCompany: string;
  mobileBusinessGroupOfSrilankaCompany: string;
  faxNumberBusinessGroupOfSrilankaCompany: string;
  emailBusinessGroupOfSrilankaCompany: string;
  members: BusinessGroupMember[];
  createdAt: string;
  updatedAt: string;
  __v: number;
}
// business third party
export type ThirdPartyBusinessMember = {
  _id: string;
  formId: string;
  familyNameThirdPartyBusiness: string;
  givenNameThirdPartyBusiness: string;
  titleThirdPartyBusiness: string;
  dateOfBirthThirdPartyBusiness: string;
  genderThirdPartyBusiness: string;
  nationalityThirdPartyBusiness: string;
  countryOfBirthThirdPartyBusiness: string;
  covidVaccinatedThirdPartyBusiness: string;
  countryOfAddressThirdPartyBusiness: string;
  occupationThirdPartyBusiness: string;
  passportNumberThirdPartyBusiness: string;
  issueDateThirdPartyBusiness: string;
  expiryDateThirdPartyBusiness: string;
  passportImageThirdPartyBusiness: string;
  validResidenceThirdPartyBusiness: string;
  validEtaOrExtensionThirdPartyBusiness: string;
  multipleEntryVisaThirdPartyBusiness: string;
  __v: number;
};

export interface ThirdPartyBusiness {
  _id: string;
  whereHaveBeenThirdPartyBusiness: string;
  attendantArrivalDateThirdPartyBusiness: string;
  purposeOfVisitThirdPartyBusiness: string;
  PurposeDescriptionThirdPartyBusiness: string;
  portOfDepartureThirdPartyBusiness: string;
  ArilineVesselThirdPartyBusiness: string;
  flightVesselNumberThirdPartyBusiness: string;
  companyNameApplicantThirdPartyBusiness: string;
  addressLineOneApplicantThirdPartyBusiness: string;
  addressLineTwoApplicantThirdPartyBusiness: string;
  cityApplicantThirdPartyBusiness: string;
  stateApplicantThirdPartyBusiness: string;
  zipCodeApplicantThirdPartyBusiness: string;
  countryApplicantThirdPartyBusiness: string;
  emailApplicantThirdPartyBusiness: string;
  alternateEmailApplicantThirdPartyBusiness: string;
  telephoneApplicantThirdPartyBusiness: string;
  mobileApplicantThirdPartyBusiness: string;
  faxNumberApplicantThirdPartyBusiness: string;
  companyNameSriLankanThirdPartyBusiness: string;
  addressLineOneSriLankanThirdPartyBusiness: string;
  addressLineTwoSriLankanThirdPartyBusiness: string;
  citySriLankanThirdPartyBusiness: string;
  stateSriLankanThirdPartyBusiness: string;
  zipCodeSriLankanThirdPartyBusiness: string;
  countrySriLankanThirdPartyBusiness: string;
  emailSriLankanThirdPartyBusiness: string;
  telephoneSriLankanThirdPartyBusiness: string;
  mobileSriLankanThirdPartyBusiness: string;
  faxNumberSriLankanThirdPartyBusiness: string;
  partyTypeThirdPartyBusiness: string;
  familyNameTypeOfThirdPartyBusiness: string;
  givenNameTypeOfThirdPartyBusiness: string;
  addressLineOneThirdPartyBusiness: string;
  addressLineTwoThirdPartyBusiness: string;
  cityThirdPartyBusiness: string;
  stateThirdPartyBusiness: string;
  zipCodeThirdPartyBusiness: string;
  countryThirdPartyBusiness: string;
  telephoneThirdPartyBusiness: string;
  mobileThirdPartyBusiness: string;
  faxNumberThirdPartyBusiness: string;
  emailThirdPartyBusiness: string;
  alternateEmailThirdPartyBusiness: string;
  members: ThirdPartyBusinessMember[];
  createdAt: string;
  updatedAt: string;
  __v: number;
}
